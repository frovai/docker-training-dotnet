##FROM mcr.microsoft.com/dotnet/aspnet:5.0 as base
# Oficial image, Using multi-staging , tagging image and using lightweight with alpine
# 1 rule
FROM mcr.microsoft.com/dotnet/aspnet:5.0-alpine AS base
WORKDIR /app

##FROM mcr.microsoft.com/dotnet/sdk:5.0 AS build
# 1 rule
FROM mcr.microsoft.com/dotnet/sdk:5.0-alpine AS build
COPY . /src
WORKDIR /src
RUN dotnet build "aspnetapp.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "aspnetapp.csproj" -c Release -o /app/publish

FROM base AS final
WORKDIR /app

## Ensure 1 layer only, change to apk managing package , removing the cache packages
##RUN apt update -y 
##RUN apt-get install --reinstall procps net-tools -y
# 2 rule
RUN apk update \
        && apk add procps \
        && apk add net-tools \
        && rm -rf /var/cache/apt/*

## Passing envs, don't use hard-coding values, injecting secrets and sensible information only on runtime
# 3 rule
ENV APP_USER web_user

## Ensure no root permissions on docker image, Set new user
# 4 rule
RUN useradd -r $APP_USER
USER $APP_USER

COPY --from=publish /app/publish .
# Expose ports, it only documents the ports your application needs to expose
# 5 rule
EXPOSE 8080
ENTRYPOINT ["dotnet", "aspnetapp.dll"]
